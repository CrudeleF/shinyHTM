{
    "collab_server" : "",
    "contents" : "source(\"dependencies.r\")\nsource(\"functions.r\")\n\nshinyServer(function(input, output){\n    \n    # File Input\n    sourcefile <- reactive(input$file1$datapath)\n    data <- reactive(read.csv(sourcefile(), stringsAsFactors = FALSE))\n    \n    \n    # Plot variables\n    output$selectX <- renderUI({\n        selectInput(\"Xaxis\", \"X axis:\", as.list(names(data())))\n    })\n    output$selectY <- renderUI({\n        selectInput(\"Yaxis\", \"Y axis:\", as.list(names(data())))\n    })\n    \n    \n    # Settings\n    output$selectTreatment <- renderUI({\n        selectInput(\"TreatmentCol\", \"Treatment:\", as.list(names(data())))\n    })\n    output$selectBatch     <- renderUI({\n        selectInput(\"BatchCol\", \"Batch:\", as.list(names(data())))\n    })\n    output$selectWellCoord <- renderUI({\n        selectInput(\"WellCol\", \"Well coordinate:\", as.list(names(data())))\n    })\n    output$selectPosCoord  <- renderUI({\n        selectInput(\"PosCol\", \"Sub-position coordinate:\", as.list(names(data())))\n    })\n    output$fiji_path       <- renderUI({\n        if (Sys.info()['sysname'] == \"Windows\"){\n            return(textInput(\"fiji_binary\", \"Path to Fiji (only necessary for Windows)\", value = \"C:/Fiji.app/ImageJ-win64.exe\"))\n        } else {\n                return(\"/Applications/Fiji.app/Contents/MacOS/ImageJ-macosx\")\n        }\n    })\n    output$availableimages <- renderUI({\n        img_names <- gsub(paste0(\"^\", input$prefixPath, \"(.*)\"), \"\\\\1\", names(data())[grep(paste0(\"^\", input$prefixPath), names(data()))])\n        checkboxGroupInput(\"images2display\", \"Select images to be viewed upon clicking within a plot\", as.list(img_names))\n    })\n    \n\n    # Data table\n    output$valuestable <- renderDataTable(data())\n    \n    \n    # Plot\n    output$plot <- renderPlotly({\n                        if (input$plotType == \"Scatter plot\"){\n                            scatterPlot(data(), input$Xaxis, input$Yaxis)\n                        } else if (input$plotType == \"Jitter plot\"){\n                            jitterPlot(data(), input$Xaxis, input$Yaxis)\n                        } else{\n                            heatmapPlot()\n                        }\n                    })\n    \n    \n    # Plot-Fiji interaction\n    output$selection <- renderPrint({\n        s <- event_data(\"plotly_click\")\n        if (length(s) == 0) {\n            \"Click on a data point!\"\n        } else {\n            print(\"You selected:\")\n            print(s)\n            i = s[[\"pointNumber\"]]\n            \n            openTheseImgChannels <- input$images2display\n            \n            tempPathInTable    <- gsub(\"\\\\\\\\\", \"/\", input$pathInTable)\n            tempPathInComputer <- gsub(\"\\\\\\\\\", \"/\", input$pathInComputer)\n            tempFullPathName <- paste0(data()[i, paste0(input$prefixPath, input$images2display)], \"/\", data()[i, paste0(input$prefixFile, input$images2display)])\n            tempFullPathName <- gsub(\"\\\\\\\\\", \"/\", tempFullPathName)\n            FullPathFile <- sub(tempPathInTable, tempPathInComputer, tempFullPathName, ignore.case = TRUE)\n\n            print(\"Launching Fiji now....\")\n            OpenInFiji(FullPathFile, input$fiji_binary)\n            \n        }\n    })\n    \n})",
    "created" : 1470148176585.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "11|32|13|4|\n14|32|16|4|\n20|40|22|4|\n23|40|25|4|\n26|40|28|4|\n29|40|31|4|\n32|40|38|4|\n39|40|42|4|\n50|33|58|20|\n62|37|83|4|\n",
    "hash" : "2665466879",
    "id" : "548204E1",
    "lastKnownWriteTime" : 1470530045,
    "last_content_update" : 1470530045794,
    "path" : "~/shiny/shinyHTM/server.r",
    "project_path" : "server.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}