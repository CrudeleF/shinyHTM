{
    "collab_server" : "",
    "contents" : "# Generate Plotly scatter plot\nscatterPlot <- function(df, x, y){\n    g <- ggplot(df, aes_string(x, y))\n    g <- g + geom_point()\n    ggplotly(g)\n}\n\n# Generate Plotly jitter plot\njitterPlot <- function(df, x, y){\n    g <- ggplot(df, aes_string(x, y))\n    g <- g + geom_jitter()\n    ggplotly(g)\n}\n\n# Generate Plotly heatmap\nheatmapPlot <- function(){\n    \n}\n\n\n\n# Can open multiple files at once\n# filePath is an array of character strings\nOpenInFiji <- function(filePath, FijiPath = \"C:\\\\Fiji.app\\\\ImageJ-win64.exe\"){\n    filePath <- gsub(\"\\\\\\\\\", \"/\", filePath)\n    \n    # Generate the expression opening each image\n    fileexpression <- \"\"\n    for (path in filePath){\n        fileexpression <- paste0(fileexpression, \" -eval \\\"open('/\", path, \"')\\\"\")\n    }\n    \n    # Evoke Fiji with the expression compiled above\n    cmd <- paste0(\"\\\"\", FijiPath, \"\\\" -debug\", fileexpression)\n    system(cmd)\n}\n\n# Generate coordinates for heatmap\nheatmapCoord <- function(WellX, WellY, PosX, PosY, subposjitter = 0.2){\n    \n    numWells <- WellX * WellY\n    numSubpos <- PosX * PosY\n    \n    # Map well numbers to a plate layout\n    wellLayout <- matrix(1:numWells, WellY, WellX, byrow = TRUE, dimnames = list(LETTERS[1:WellY], 1:WellX))\n    \n    # (x,y) coordinates for all well centers\n    WellCenters <- data.frame(wellnum = integer(), X = integer(), Y = integer())\n    for (i in 1:WellY){\n        for (j in 1:WellX){\n            temp <- which(wellLayout == wellLayout[i,j], arr.ind=TRUE)\n            WellCenters <- rbind(WellCenters, \n                                 data.frame(wellnum = wellLayout[i,j], X = temp[1,\"col\"], Y = -temp[1,\"row\"]+r+1)\n            )\n        }\n    }\n    \n    \n    # Map subposition array\n    posLayout <- matrix(1:numSubpos, PosY, PosX, byrow = TRUE, dimnames = list(LETTERS[1:PosY], 1:PosX))\n    \n    # (x,y) coordinates for each subposition cluster.\n    PosCenters <- data.frame(posnum = integer(), X = numeric(), Y = numeric())\n    for (u in 1:PosY){\n        for (v in 1:PosX){\n            temp <- which(posLayout == posLayout[u,v], arr.ind=TRUE)\n            PosCenters <- rbind(PosCenters, \n                                data.frame(posnum = posLayout[u,v], X = temp[1,\"col\"]-0.5-PosX/2, Y = -temp[1,\"row\"]+PosY/2+0.5)\n            )\n        }\n    }\n    PosCenters[, c(\"X\", \"Y\")] <- PosCenters[, c(\"X\", \"Y\")] * subposjitter\n    \n    \n    # (x,y) coordinates for all images in a plate\n    temp <- data.frame(wellnum = integer(), posnum = integer(), X = numeric(), Y = numeric())\n    for(w in 1:numWells){\n        \n        localcenter <- do.call(\"rbind\", replicate(numSubpos, WellCenters[w,], simplify = FALSE))\n        localcenter$posnum <- PosCenters$posnum\n        localcenter$X <- localcenter$X + PosCenters$X\n        localcenter$Y <- localcenter$Y + PosCenters$Y\n        \n        temp <- rbind(temp, localcenter)\n    }\n    \n    row.names(temp) <- NULL\n    temp\n}",
    "created" : 1470148294681.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "1|34|5|0|\n8|33|12|0|\n15|26|17|0|\n23|78|35|0|\n38|71|88|0|\n",
    "hash" : "2514785435",
    "id" : "CA417003",
    "lastKnownWriteTime" : 1470655535,
    "last_content_update" : 1470655632404,
    "path" : "~/shiny/shinyHTM/functions.r",
    "project_path" : "functions.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}